DECLARE
   TYPE department IS TABLE OF departments%ROWTYPE INDEX BY PLS_INTEGER; 
   dep_list department; 
BEGIN
    for i in 1..10
    LOOP
        select * into dep_list(i) from departments where department_id=i*10; 
        dbms_output.put_line('Department name: ' || dep_list(i).department_name ||' department id:  '|| dep_list(i).department_id ||' manager id: '|| dep_list(i).manager_id);
    end loop;
end;


DECLARE
    CURSOR c is select salary, last_name from employees where department_id=50;
begin
    for e in c loop
        if e.salary > 3100 then
            dbms_output.put_line(e.last_name||' nie dawać podwyżki');
        else
            dbms_output.put_line(e.last_name||' dać podwyżkę');
        end if;
    end loop;
end;


Declare 
    cursor c(od number, do1 number, litera varchar) is select salary, first_name, last_name from employees where salary between od and do1 and first_name like '%'||litera||'%';
begin
    dbms_output.put_line('1000-5000 a');
    for e in c(1000,5000,'a') loop
        dbms_output.put_line(e.first_name ||' ' || e.last_name);
    end loop;
    dbms_output.put_line('5000-20000 u');
    for e in c(5000,20000,'u') loop
        dbms_output.put_line(e.first_name ||' ' || e.last_name);
    end loop;
end;


Create or replace Procedure add_jobs(job_id varchar, job_title varchar) as
begin
    insert into jobs (job_id,job_title) values(job_id, job_title);
EXCEPTION
   WHEN OTHERS THEN
      dbms_output.put_line( SQLERRM );
END add_jobs;

execute add_jobs('tch', 'teacher');


Create or replace Procedure mod_jobs(job_idd varchar, job_titlee varchar)  as roww jobs%ROWTYPE;
begin
    update jobs set job_title=job_titlee where job_id=job_idd;
EXCEPTION
   WHEN select * from jobs where job_id=job_idd THEN
      dbms_output.put_line( SQLERRM );
END mod_jobs;

execute mod_jobs('tc3h', 'teacherr');
